name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
      
    - name: Cache apt packages
      uses: actions/cache@v3
      with:
        path: /var/cache/apt/archives
        key: ${{ runner.os }}-apt-jq-${{ hashFiles('.github/workflows/test.yml') }}
        restore-keys: |
          ${{ runner.os }}-apt-jq-
          ${{ runner.os }}-apt-
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq kcov
      
    - name: Cache fzf
      uses: actions/cache@v3
      id: cache-fzf
      with:
        path: ~/.fzf
        key: ${{ runner.os }}-fzf-${{ hashFiles('.github/workflows/test.yml') }}
        restore-keys: |
          ${{ runner.os }}-fzf-
        
    - name: Install fzf
      if: steps.cache-fzf.outputs.cache-hit != 'true'
      run: |
        git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
        ~/.fzf/install --bin
        
    - name: Add fzf to PATH
      run: |
        if [ -f "$HOME/.fzf/bin/fzf" ]; then
          echo "$HOME/.fzf/bin" >> $GITHUB_PATH
        else
          echo "Warning: fzf binary not found in cache" >&2
          exit 1
        fi
        
    - name: Make scripts executable
      run: |
        chmod +x run_tests.sh run_with_coverage.sh bookmarks.sh
        chmod +x test_bookmarks.sh test_editor_features.sh test_frecency.sh test_special_chars.sh test_type_execution.sh test_composable_filters.sh
        
    - name: Run all tests with coverage
      run: |
        ./run_tests.sh --coverage
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        directory: ./coverage
        files: ./coverage/merged/cobertura.xml
        flags: unittests
        name: universal-bookmarks-coverage
        fail_ci_if_error: false
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
